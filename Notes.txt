##################################################################
Notes on IPM being developed 
##################################################################

2/18/20: I've gotten the model to run. However, there are a few bugs that need to be worked out:
	1. For some reason the update function is not worked as I'd like it to. It seems to be 
misbehaving when interactions, firings, hirings, and resignations occur. When individuals are added
to the organization's workforce, we have 1K individuals. This should remain constant. For some 
reason, though, it isn't. This means, likely, that I'm not decrementing everywhere I should be. 
Perhaps in the resignation function? 
	2. For some reason, negative n_* values were being achieved. This doesn't make any sense, 
since for this to happen, a resignation or interaction-as-listener needs to take place for a 
worldview that isn't represented in the organization. That is, a non-existent individual is having 
his mind changed or is resigning or is being fired from the organization. 

It's good, however, that the model is at least working. Up next, once these bugs are fixed, is 
parameter tuning, which I'm excited about. What distribution should be used for the threshold 
parameters? Further, what should be threshold buckets be for zealot_resistance_probabilities? And, 
finally, what is a better measure for polarization than simple 1-n_AB? These are all good questions
that need to be answered. Once they are, then I can develop a nice interface with which to nicely 
run experiments

2/21/20: The code is now fully debugged and working. The main error fixed today was particularly 
frustrating, although I learned quite a bit from it: 

I originally updated the configuration of the organization's workforce using an update_config() 
function. Statistical information about the workforce was stored as fields (n_*, N_*, polarization,
 etc.). The update_config() function then either incremented or decremented the count of individual
 with a particular worldview when a change in the workforce took place -- hiring, firing, 
interaction, resignation. It's unclear why, but this resulted in an out-of-sync issue between the 
statistical information about the workforce and the workforce itself. Particular worldviews would 
be detected in the workforce and selected for resignation or firing even when the count with respect
 to their worldview had been driven to zero already. This meant that worldview counts were negative
 given enough epochs. This was solved simply by simplifying the organization class with a 
get_statistics() function that reads in the workforce list and operates on it directly to recover 
all the relevant statistical information. get_statistics() was then called whenever the statistical
 information was required. This allowed the statistics and the workforce list (assuming the 
workforce list was updated correctly) to always be in sync. 

So, it looks like the model is now fully operational, and I can move on to the finer details. In 
particular: 
	1. Building a command line interface that I can use to efficiently run experiments 
	2. Developing a proper metric for polarization w/ range [0,1] that increases as components 
become more segregated 
	3. Finding the proper distributions for TOPP and THOM (in particular, think about TOPP for 
moderates and THOM for zealots)  
	4. Probabilities for SR and ASR	
	5. Developing the differential equations that predict the behavior we see 
	6. Building a pygame functionality so that the dynamics of the model can be visualized 

In addition, it is probably time to drop all the notes made thus far into a word doc and 
linguistically flush out the model. This will be a good way to get the ball rolling on the paper 
whose publication, I'm sure, is inevitable. Ha, laughable.   

2/27/20: For some reason, when in ASR mode, whenever a new AB is hired, he is hired to the same 
position. In one case it was position 99. It looks like when ASR mode is entered, any AB will 
always resign. We therefore get stuck in a rut, where the same position resigned by an AB is
filled by an AB who then resigns again. There is a choice here about whether or not to assume that the
the state of the organization is transparent to the hiring pool or not. If we make this assumption,
then an individual will not enter the organization if either of his tolerances -- TOPP or THOM --
are exceeded. This avoids the problem, however, of individuals with the same worldview being hired
for then resigning from the same position. This can be solved simply by only hiring individuals who
are able to "handle" the current state of the organization. Or, rather, by assuming that, since
the state of the organization is visible to the hiring pool, there is some self-selection force 
causing only individuals who have the ability to withstand the current state of the organization 
to submit themselves for candidacy. 

When we assume this selective force, born of the prior assumption of "organizational visibility to 
hiring pool", the long term dynamics of the organization change. The organization's polarization
is kept in check, hovering at around .6, which is the threshold used to trigger conscious hiring of
ABs. In the opposite case, the predominant worldview and the opposite worldview zealots converge to
roughly .5, while everything else converges to 0. 

2/29/20: Ran a test today that confirmed that the salient variable in anti-self replication here is 
how exhaustive the search for moderates is. If the hiring pool is sufficiently compromised, then if 
the search isn't exhaustive enough, then the organization will end up hiring As and Bs instead of 
moderates. More accurately, the organization will hire with the same bias as the hiring pool, and 
polarization will steadly increase. 

3/7/20: For the past few days, I have been working on the mathematical characterization of the system.
There are multiple areas in which things are illdefined. Perhaps I should have begun with the 
mathematical characterization then implemented the model to validate analytical results. In 
particular, I have finally come up with what I think is a workable metric for polarization that is 
constructed, first, using an average of three values that tell us how distant from being equal each 
subpopulation is relative to the others. Note that this average, which we'll call rho_0 is in [0,inf).
 Because we want the polarization value to be in the interval [0,1), we take Polarization = 
2/pi*arctan(rho_0). Now polarization is increasing as rho_0 increases and converges to a limit of 1 
on [0,inf).  

3/10/20: I'm now conducted a fixed point analysis of the system of nonlinear differential equations. 
It looks like the easy fixed point analysis given in the Strogatz paper won't be applicable here. 
However, it might be possible to conduct a generalized stability analysis using methods involving 
eigenanalysis of the Jacobian. I also was able to think a bit more carefully about the system of 
differential equations I orginally drew up. I realized several flaws which have now been corrected. 


